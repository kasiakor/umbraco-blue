@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Web.PublishedModels.Search>

@{
    Layout = "master.cshtml";
    var searchQuery = Request.QueryString["q"];
}

<!-- Page Header -->
@Html.Partial("~/Views/Partials/pageHeader.cshtml")

<div class="container">
    <form action="@Model.Url" method="GET" id="search">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="form-group controls">
                    <input type="text" class="form-control col-cx-6" placeholder="@Umbraco.GetDictionaryValue("Search.Placeholder")" name="q" value="" />
                </div>
            </div>
            <div class="col-lg-8 col-md-10 mx-auto">
                <div class="form-group">
                    <button class="btn btn-primary search-button">@Umbraco.GetDictionaryValue("Search.ButtonText") <i class="fa fa-search"></i></button>
                </div>
            </div>
            <div class="col-lg-8 col-md-10 mx-auto">
                @if (!string.IsNullOrWhiteSpace(searchQuery))
                {
                    var results = Umbraco.ContentQuery.Search(searchQuery, string.Empty);
                    long resultsCount = results != null && results.Any() ? results.Count() : 0;

                <p>@Html.Raw(string.Format(Umbraco.GetDictionaryValue("Search.ResultsText"), resultsCount == 1 ? "is" : "are", resultsCount, resultsCount == 1 ? null : "s"))</p>

                    if (resultsCount > 0)
                    {
                        foreach (var result in results)
                        {
                            var title = result.Content.Value<string>("title");
                            var subtitle = result.Content.Value<string>("subtitle");
                            var articleName = result.Content.Value<string>("articleName");
                            var articleDate = result.Content.Value<DateTime>("articleDate");



                            <div class="post-preview">
                                <a href="@result.Content.Url">
                                    <h2 class="post-title">@(!string.IsNullOrEmpty(title) ? title : result.Content.Name)</h2>
                                    <h3 class="post-subtitle">@(!string.IsNullOrEmpty(subtitle) ? subtitle : "")</h3>
                                    </a>
                                    @if (!string.IsNullOrEmpty(articleName) && articleDate != DateTime.MinValue)
                                    {
                                        <p>Posted by @articleName on @articleDate.ToString("MMMM dd, yyyy")</p>
                                    }
                                </div>
                            }
                        }
                    }
            </div>
        </div>
    </form>
</div>


